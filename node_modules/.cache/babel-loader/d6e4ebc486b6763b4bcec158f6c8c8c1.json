{"ast":null,"code":"import _regeneratorRuntime from \"/home/vishal/blogpost/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vishal/blogpost/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _ from 'lodash';\nimport JsonPlaceHolder from '../apis/JsonPlaceHolder'; //Creating ActionCreator\n\nexport var fetchPosts = function fetchPosts() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return JsonPlaceHolder.get('/posts');\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: 'FETCH_POST',\n                  payload: response\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchUser = function fetchUser() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return JsonPlaceHolder.get(\"/users/\".concat(id));\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: 'FETCH_USER',\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\n/*export const fetchUser =  id => dispatch => {\n   _fetchUser(id,dispatch); \n}\n   //return async function (dispatch)  {\n       const _fetchUser = _.memoize(async (id,dispatch)=>{\n        const response = await JsonPlaceHolder.get(`/users/${id}`);\n\n        dispatch({ type: 'FETCH_USER', payload: response.data });\n    \n       });*/","map":{"version":3,"sources":["/home/vishal/blogpost/src/actions/index.js"],"names":["_","JsonPlaceHolder","fetchPosts","dispatch","get","response","type","payload","fetchUser","id","data"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,yBAA5B,C,CAEA;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACLF,eAAe,CAACG,GAAhB,CAAoB,QAApB,CADK;;AAAA;AACtBC,gBAAAA,QADsB;AAG5BF,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAE,YAAR;AAAsBC,kBAAAA,OAAO,EAAEF;AAA/B,iBAAD,CAAR;;AAH4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAOP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAML,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACJF,eAAe,CAACG,GAAhB,kBAA8BK,EAA9B,EADI;;AAAA;AACrBJ,gBAAAA,QADqB;AAG3BF,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAE,YAAR;AAAsBC,kBAAAA,OAAO,EAAEF,QAAQ,CAACK;AAAxC,iBAAD,CAAR;;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAOP","sourcesContent":["import _ from 'lodash';\nimport JsonPlaceHolder from '../apis/JsonPlaceHolder';\n\n//Creating ActionCreator\nexport const fetchPosts = () => async dispatch => {\n    const response = await JsonPlaceHolder.get('/posts');\n\n    dispatch({ type: 'FETCH_POST', payload: response });\n\n};\n\nexport const fetchUser = () => async dispatch => {\n    const response = await JsonPlaceHolder.get(`/users/${id}`);\n\n    dispatch({ type: 'FETCH_USER', payload: response.data});\n\n};\n\n/*export const fetchUser =  id => dispatch => {\n   _fetchUser(id,dispatch); \n}\n   //return async function (dispatch)  {\n       const _fetchUser = _.memoize(async (id,dispatch)=>{\n        const response = await JsonPlaceHolder.get(`/users/${id}`);\n\n        dispatch({ type: 'FETCH_USER', payload: response.data });\n    \n       });*/\n    \n    "]},"metadata":{},"sourceType":"module"}