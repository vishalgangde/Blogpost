{"ast":null,"code":"import _regeneratorRuntime from \"/home/vishal/blogpost/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/vishal/blogpost/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _ from 'lodash';\nimport JsonPlaceHolder from '../apis/JsonPlaceHolder'; //Creating ActionCreator\n//export const fetchPosts = () => async dispatch => {\n//  const response = await JsonPlaceHolder.get('/posts');\n//dispatch({ type: 'FETCH_POST', payload: response });\n//};\n\nexport var fetchUser = function fetchUser(id) {\n  return _.memoize(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return JsonPlaceHolder.get(\"/users/\".concat(id));\n\n            case 2:\n              response = _context.sent;\n              dispatch({\n                type: 'FETCH_USER',\n                payload: response.data\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};","map":{"version":3,"sources":["/home/vishal/blogpost/src/actions/index.js"],"names":["_","JsonPlaceHolder","fetchUser","id","memoize","dispatch","get","response","type","payload","data"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,eAAP,MAA4B,yBAA5B,C,CAEA;AACA;AACE;AAEE;AAEJ;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAUC,EAAV,EAAc;AACnC,SAAOH,CAAC,CAACI,OAAF;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAU,iBAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMJ,eAAe,CAACK,GAAhB,kBAA8BH,EAA9B,EADN;;AAAA;AACXI,cAAAA,QADW;AAGjBF,cAAAA,QAAQ,CAAC;AAAEG,gBAAAA,IAAI,EAAE,YAAR;AAAsBC,gBAAAA,OAAO,EAAEF,QAAQ,CAACG;AAAxC,eAAD,CAAR;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA,MAAP;AAMH,CAPM","sourcesContent":["import _ from 'lodash';\nimport JsonPlaceHolder from '../apis/JsonPlaceHolder';\n\n//Creating ActionCreator\n//export const fetchPosts = () => async dispatch => {\n  //  const response = await JsonPlaceHolder.get('/posts');\n\n    //dispatch({ type: 'FETCH_POST', payload: response });\n\n//};\n\nexport const fetchUser = function (id) {\n    return _.memoize(async function (dispatch)  {\n    const response = await JsonPlaceHolder.get(`/users/${id}`);\n\n    dispatch({ type: 'FETCH_USER', payload: response.data });\n\n});\n};\n    "]},"metadata":{},"sourceType":"module"}